version: '3'

vars:
  THISFILE_DIR: '{{.TASKFILE_DIR}}'
  OPEN_CMD: '{{eq OS "linux" | ternary "xdg-open" "open" }}'

  TAG: '{{.TAG | default "latest"}}'

dotenv: [ '.env' ]

silent: true
tasks:
  default:
    cmds:

  sync:
    cmds:
      - mise x -- pixi i

  up:
    deps:
      - sync
    cmds:
      - rm -f pc.global.log
      - mise x -- process-compose -D
      - |
        echo Waiting 12s for services to be ready...
        sleep 12s
        echo ------
        echo Airflow admin password: $(cat airflow/standalone_admin_password.txt)
        echo       Jupyterlab token: $(grep -oE 'token=.*"' pc.global.log | uniq | cut -d= -f2 | cut -d\" -f1)
        echo ------
      - "{{.OPEN_CMD}} http://localhost:8080 >/dev/null"
      - "{{.OPEN_CMD}} http://localhost:8888 >/dev/null"
      - "{{.OPEN_CMD}} http://localhost:5000 >/dev/null"

  down:
    cmds:
      - mise x -- process-compose down

  clean:
    cmds:
      - rm -rf airflow
      - rm -rf mlruns

  purge:
    cmds:
      - task: clean    
      - rm -f pc.global.log
      - rm -rf .pixi .ipynb_checkpoints mlartifacts mlflow-dockerfile

  build:
    requires:
      vars: [ RUN_ID ]
    cmds:
      - rm -rf mlflow-dockerfile
      - mise x -- pixi r mlflow models generate-dockerfile --enable-mlserver -m runs:/{{.RUN_ID}}/model
      - sed -i '/^FROM .*/a ENV PIP_INDEX_URL=https:\/\/mirrors.aliyun.com\/pypi\/simple' mlflow-dockerfile/Dockerfile
      - sed -i '/^RUN apt-get .*/i RUN sed -i -E "s\/(deb|security).debian.org\/mirrors.aliyun.com\/g" \/etc\/apt\/sources.list.d\/debian.sources' mlflow-dockerfile/Dockerfile
      - mise x -- docker build -t {{base .THISFILE_DIR}}:{{.TAG}} mlflow-dockerfile

  serve:
    requires:
      vars: [ RUN_ID ]
    cmds:
      - mise x -- pixi r mlflow models serve --env-manager conda -m runs:/{{.RUN_ID}}/model -p 1234
