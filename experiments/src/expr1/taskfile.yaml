version: '3'

vars:
  PYTHON_VERSION:
    sh: |
      cat .python-version | cut -d. -f1,2
  AIRFLOW_VERSION: '{{.AIRFLOW_VERSION}}'
  CONSTRAINT_URL: "https://raw.githubusercontent.com/apache/airflow/constraints-{{.AIRFLOW_VERSION}}/constraints-{{.PYTHON_VERSION}}.txt"

  OPEN_CMD: '{{eq OS "linux" | ternary "xdg-open" "open" }}'

dotenv: [ '.env' ]

silent: true
tasks:
  default:
    cmds:

  sync:
    cmds:
      - |
        if [ ! -f "requirements.txt" ]; then
          sed -i 's/apache-airflow==.*/apache-airflow=={{.AIRFLOW_VERSION}}/g' requirements.in
          uv pip compile -c {{.CONSTRAINT_URL}} -o requirements.txt requirements.in
        fi
      - uv venv --seed  
      - uv sync
      - uv pip install -r requirements.txt

  up:
    cmds:
      - process-compose -D
      - |
        echo Waiting 10s for servers ready...
        sleep 10s
      - "echo Airflow admin password: $(cat airflow/standalone_admin_password.txt)"
      - "{{.OPEN_CMD}} http://localhost:8080 >/dev/null"
      - "{{.OPEN_CMD}} http://localhost:8888 >/dev/null"
      - "{{.OPEN_CMD}} http://localhost:5000 >/dev/null"

  down:
    cmds:
      - process-compose down

  clean:
    cmds:
      - rm -rf airflow
      - rm -rf mlruns

  purge:
    cmds:
      - task: clean    
      - rm -f requirements.txt pc.global.log
      - rm -rf .venv ipynb_checkpoints mlartifacts mlflow-dockerfile
